# Generated by Django 2.0.5 on 2018-05-09 17:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BiologicContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mass', models.FloatField(default=0)),
                ('mass_units', models.CharField(choices=[('ng/L', 'ng/L'), ('ug/L', 'ug/L'), ('mg/L', 'mg/L'), (' g/L', ' g/L'), (' nM ', ' nM '), (' uM ', ' uM '), (' mM ', ' mM '), ('  M ', '  M ')], default=' g/L', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='CellBiologicContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LiquidContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.FloatField(default=1)),
                ('volume_units', models.CharField(choices=[('uL', 'uL'), ('mL', 'mL'), (' L', ' L')], default=' L', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Matter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('owner', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SolidContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mass', models.FloatField(default=0)),
                ('mass_units', models.CharField(choices=[('ng/L', 'ng/L'), ('ug/L', 'ug/L'), ('mg/L', 'mg/L'), (' g/L', ' g/L'), (' nM ', ' nM '), (' uM ', ' uM '), (' mM ', ' mM '), ('  M ', '  M ')], default=' g/L', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Biologic',
            fields=[
                ('matter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reagents.Matter')),
                ('sequence', models.TextField(max_length=10000)),
                ('form', models.CharField(choices=[('  plasmid  ', 'plasmid'), ('  genomic  ', 'genomic'), ('recombinant', 'recombinant')], max_length=11)),
                ('shape', models.CharField(choices=[('circular', 'circular'), (' linear ', 'linear')], max_length=8)),
                ('material', models.CharField(choices=[(' dsDNA ', 'dsDNA'), (' ssDNA ', 'ssDNA'), (' dsRNA ', 'dsRNA'), (' ssRNA ', 'ssRNA'), ('protein', 'protein')], max_length=7)),
            ],
            bases=('reagents.matter',),
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('matter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reagents.Matter')),
                ('species', models.TextField(default='E.Coli', max_length=255)),
                ('morphology', models.CharField(choices=[('fibro', 'fibroblastic'), ('epith', 'epithelial-like'), ('lymph', 'lymphoblast-like')], default='-----', max_length=5)),
                ('shaken', models.BooleanField(default=False)),
                ('media_preference', models.CharField(default='', max_length=50)),
                ('doubling_time', models.FloatField(default=1)),
                ('doubling_time_units', models.CharField(choices=[('  s', 's'), ('min', 'min'), ('  h', 'h'), ('  d', 'y')], default='  h', max_length=3)),
                ('culture_environment', models.CharField(default='', max_length=255)),
            ],
            bases=('reagents.matter',),
        ),
        migrations.CreateModel(
            name='Liquid',
            fields=[
                ('matter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reagents.Matter')),
            ],
            bases=('reagents.matter',),
        ),
        migrations.CreateModel(
            name='Solid',
            fields=[
                ('matter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reagents.Matter')),
                ('mw', models.FloatField(default=0, verbose_name='Molecular weight')),
                ('mw_units', models.CharField(choices=[('kg/mol', 'kg/mol'), (' g/mol', ' g/mol')], default=' g/mol', max_length=6, verbose_name='Units')),
            ],
            bases=('reagents.matter',),
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('matter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reagents.Matter')),
                ('biologics', models.ManyToManyField(through='reagents.BiologicContent', to='reagents.Biologic')),
                ('liquids', models.ManyToManyField(through='reagents.LiquidContent', to='reagents.Liquid')),
                ('solids', models.ManyToManyField(through='reagents.SolidContent', to='reagents.Solid')),
            ],
            bases=('reagents.matter',),
        ),
        migrations.AddField(
            model_name='solidcontent',
            name='reagent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Solid'),
        ),
        migrations.AddField(
            model_name='solidcontent',
            name='solution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Solution'),
        ),
        migrations.AddField(
            model_name='liquidcontent',
            name='reagent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Liquid'),
        ),
        migrations.AddField(
            model_name='liquidcontent',
            name='solution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Solution'),
        ),
        migrations.AddField(
            model_name='cellbiologiccontent',
            name='cell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Cell'),
        ),
        migrations.AddField(
            model_name='cellbiologiccontent',
            name='reagent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Biologic'),
        ),
        migrations.AddField(
            model_name='cell',
            name='biologics',
            field=models.ManyToManyField(through='reagents.CellBiologicContent', to='reagents.Biologic'),
        ),
        migrations.AddField(
            model_name='biologiccontent',
            name='reagent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Biologic'),
        ),
        migrations.AddField(
            model_name='biologiccontent',
            name='solution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reagents.Solution'),
        ),
    ]
